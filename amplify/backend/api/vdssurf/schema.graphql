enum AutosEnum {
  JEEP
  FORD
  VOLVO
}

enum LevelsEnum {
  TRESPALMAS
  SANDY
  STEPS
}

enum CommitmentEnum {
  THINKINGABOUTIT
  PRETTYSURE
  CONFIRMED
}

type VDSBooking 
  @model 
  @auth(
    rules: [
      # allow owners ability to update and delete their these messages (user pools)
      { allow: owner },
      { allow: groups, groups: ["Admin"], operations: [create, update, delete, read]},
      { allow: private, provider: userPools, operations: [read] },
      # allow all authenticated users to access this data
      #{ allow: private, provider: iam },
      # allow all guest users (not authenticated) to access this data
      #{ allow: public, operations: [read], provider: iam }
    ])
  {
  id: ID!
  owner: String!
  guests: String!
  description: String
  checkIn: AWSDateTime!
  checkOut: AWSDateTime!
  levels: [LevelsEnum]!
  autos: [AutosEnum]!
  commitment: CommitmentEnum!
  type: String! @index(name: "VDSBookingsByDate", queryField: "VDSBookingsByDate", sortKeyFields: ["checkOut"])
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}
 

 type VDSNote 
  @model 
  @auth(
    rules: [
      # allow owners ability to update and delete their these messages (user pools)
      { allow: owner },
      { allow: groups, groups: ["Admin"], operations: [create, update, delete, read]},
      { allow: private, provider: userPools, operations: [read] },
      # allow all authenticated users to access this data
      #{ allow: private, provider: iam },
      # allow all guest users (not authenticated) to access this data
      #{ allow: public, operations: [read], provider: iam }
    ]
  )
{
  id: ID!
  name: String!
  comments: String
  fileName: String
}